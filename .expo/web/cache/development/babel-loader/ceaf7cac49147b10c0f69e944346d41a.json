{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Sunwoo\\\\Documents\\\\Gymt\\\\screens\\\\Home\\\\WeatherApi.js\",\n    _templateObject;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Loading from \"../../components/Home/Loading\";\nimport * as Location from \"expo-location\";\nimport axios from \"axios\";\nimport Weather from \"../../components/Home/Weather\";\nimport styled from \"styled-components/native\";\nimport { Entypo } from '@expo/vector-icons';\nimport Title from \"../../components/Title\";\nimport Border from \"../../components/Home/Border\";\nvar API_KEY = \"94dea71c10b27b8da09d12bf914ae49c\";\nvar GOOGLE_KEY = \"#\";\nvar GEO_CODER = \"#\";\n\nvar WeatherApi = function (_React$Component) {\n  _inherits(WeatherApi, _React$Component);\n\n  var _super = _createSuper(WeatherApi);\n\n  function WeatherApi() {\n    var _this;\n\n    _classCallCheck(this, WeatherApi);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isLoading: true\n    };\n\n    _this.getWeather = function _callee(latitude, longitude) {\n      var _await$axios$get, _await$axios$get$data, _await$axios$get$data2, temp, humidity, weather;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios.get(\"http://api.openweathermap.org/data/2.5/weather?lat=\" + latitude + \"&lon=\" + longitude + \"&APPID=\" + API_KEY + \"&units=metric\"));\n\n            case 2:\n              _await$axios$get = _context.sent;\n              _await$axios$get$data = _await$axios$get.data;\n              _await$axios$get$data2 = _await$axios$get$data.main;\n              temp = _await$axios$get$data2.temp;\n              humidity = _await$axios$get$data2.humidity;\n              weather = _await$axios$get$data.weather;\n\n              _this.setState({\n                isLoading: false,\n                condition: weather[0].main,\n                temp: temp,\n                humidity: humidity\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getLocation = function _callee2() {\n      var _await$Location$getCu, _await$Location$getCu2, latitude, longitude;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 3:\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync());\n\n            case 5:\n              _await$Location$getCu = _context2.sent;\n              _await$Location$getCu2 = _await$Location$getCu.coords;\n              latitude = _await$Location$getCu2.latitude;\n              longitude = _await$Location$getCu2.longitude;\n\n              _this.getWeather(latitude, longitude);\n\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](0);\n              Alert.alert(\"위치를 찾을 수 없습니다.\");\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 12]], Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(WeatherApi, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getLocation();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          temp = _this$state.temp,\n          condition = _this$state.condition,\n          humidity = _this$state.humidity;\n      return isLoading ? React.createElement(React.Fragment, null, React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }\n      }, React.createElement(Entypo, {\n        name: \"location-pin\",\n        size: 24,\n        color: \"purple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }), React.createElement(Title, {\n        title: \"전라남도\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      })), React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }), React.createElement(Border, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }\n      })) : React.createElement(Weather, {\n        temp: Math.round(temp),\n        condition: condition,\n        humidity: humidity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return WeatherApi;\n}(React.Component);\n\nexport { WeatherApi as default };\nvar Container = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  padding: 0 20px;\\n  align-items: center;\\n  flex-direction: row;\\n  margin-top: 20px;\\n\"])));","map":{"version":3,"sources":["C:/Users/Sunwoo/Documents/Gymt/screens/Home/WeatherApi.js"],"names":["React","Loading","Location","axios","Weather","styled","Entypo","Title","Border","API_KEY","GOOGLE_KEY","GEO_CODER","WeatherApi","state","isLoading","getWeather","latitude","longitude","get","data","main","temp","humidity","weather","setState","condition","getLocation","requestForegroundPermissionsAsync","getCurrentPositionAsync","coords","Alert","alert","Math","round","Component","Container","View"],"mappings":";;;;;;;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,OAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AAEA,IAAMC,OAAO,GAAG,kCAAhB;AACA,IAAMC,UAAU,GAAG,GAAnB;AACA,IAAMC,SAAS,GAAG,GAAlB;;IAEqBC,U;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE;AADL,K;;UAGRC,U,GAAa,iBAAOC,QAAP,EAAiBC,SAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAMDd,KAAK,CAACe,GAAN,yDACgDF,QADhD,aACgEC,SADhE,eACmFR,OADnF,mBANC;;AAAA;AAAA;AAAA,uDAETU,IAFS;AAAA,6DAGPC,IAHO;AAGCC,cAAAA,IAHD,0BAGCA,IAHD;AAGOC,cAAAA,QAHP,0BAGOA,QAHP;AAIPC,cAAAA,OAJO,yBAIPA,OAJO;;AAiBX,oBAAKC,QAAL,CAAc;AACZV,gBAAAA,SAAS,EAAE,KADC;AAEZW,gBAAAA,SAAS,EAAEF,OAAO,CAAC,CAAD,CAAP,CAAWH,IAFV;AAGZC,gBAAAA,IAAI,EAAJA,IAHY;AAIZC,gBAAAA,QAAQ,EAARA;AAJY,eAAd;;AAjBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAwBbI,W,GAAc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEJxB,QAAQ,CAACyB,iCAAT,EAFI;;AAAA;AAAA;AAAA,+CAKAzB,QAAQ,CAAC0B,uBAAT,EALA;;AAAA;AAAA;AAAA,6DAIRC,MAJQ;AAIEb,cAAAA,QAJF,0BAIEA,QAJF;AAIYC,cAAAA,SAJZ,0BAIYA,SAJZ;;AAcV,oBAAKF,UAAL,CAAgBC,QAAhB,EAA0BC,SAA1B;;AAdU;AAAA;;AAAA;AAAA;AAAA;AAgBVa,cAAAA,KAAK,CAACC,KAAN,CAAY,gBAAZ;;AAhBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAmBd,6BAAoB;AAClB,WAAKL,WAAL;AACD;;;WACD,kBAAS;AACP,wBAAiD,KAAKb,KAAtD;AAAA,UAAQC,SAAR,eAAQA,SAAR;AAAA,UAAmBO,IAAnB,eAAmBA,IAAnB;AAAA,UAAyBI,SAAzB,eAAyBA,SAAzB;AAAA,UAAoCH,QAApC,eAAoCA,QAApC;AACA,aAAOR,SAAS,GAChB,0CACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,cAAb;AAA4B,QAAA,IAAI,EAAE,EAAlC;AAAsC,QAAA,KAAK,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADgB,GAUd,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAEkB,IAAI,CAACC,KAAL,CAAWZ,IAAX,CAAf;AAAiC,QAAA,SAAS,EAAEI,SAA5C;AAAuD,QAAA,QAAQ,EAAEH,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF;AAYD;;;;EAhEqCtB,KAAK,CAACkC,S;;SAAzBtB,U;AAoErB,IAAMuB,SAAS,GAAG9B,MAAM,CAAC+B,IAAV,qKAAf","sourcesContent":["//위치 정보: google geocoding API billing 등록해야해서 일단 보류.\r\nimport React from 'react';\r\nimport {Alert} from \"react-native\";\r\nimport Loading from \"../../components/Home/Loading\";\r\nimport * as Location from \"expo-location\"\r\nimport axios from \"axios\";\r\nimport Weather from \"../../components/Home/Weather\";\r\nimport styled from \"styled-components/native\";\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport Title from \"../../components/Title\";\r\nimport Border from \"../../components/Home/Border\";\r\n\r\nconst API_KEY = \"94dea71c10b27b8da09d12bf914ae49c\";\r\nconst GOOGLE_KEY = \"#\";\r\nconst GEO_CODER = \"#\";\r\n\r\nexport default class WeatherApi extends React.Component {\r\n  state = {\r\n    isLoading: true\r\n  };\r\n  getWeather = async (latitude, longitude) => {\r\n    const {\r\n      data: {\r\n        main: { temp, humidity },\r\n        weather\r\n      }\r\n    } = await axios.get(\r\n        `http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&APPID=${API_KEY}&units=metric`\r\n    );\r\n\r\n    /*\r\n    vworld api => localhost로는 막혀서 보류,,\r\n    await axios.get(\r\n      `http://api.vworld.kr/req/address?service=address&request=getAddress&version=2.0&crs=epsg:4326&point=${latitude},${longitude}&format=json&type=both&zipcode=true&simple=false&key=${GEO_CODER}`\r\n    );\r\n    */\r\n    \r\n    this.setState({\r\n      isLoading: false,\r\n      condition: weather[0].main,\r\n      temp,\r\n      humidity\r\n    });\r\n  };\r\n  getLocation = async () => {\r\n    try {\r\n      await Location.requestForegroundPermissionsAsync();\r\n      const {\r\n        coords: { latitude, longitude }\r\n      } = await Location.getCurrentPositionAsync();\r\n\r\n      /*\r\n      await Location.setGoogleApiKey(GOOGLE_KEY);\r\n      const place = await Location.reverseGeocodeAsync({\r\n        latitude, longitude\r\n      }, true)[3];\r\n      */\r\n\r\n      this.getWeather(latitude, longitude);\r\n    } catch (error) {\r\n      Alert.alert(\"위치를 찾을 수 없습니다.\");\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getLocation();\r\n  }\r\n  render() {\r\n    const { isLoading, temp, condition, humidity } = this.state;\r\n    return isLoading ? (\r\n    <>\r\n      <Container>\r\n        <Entypo name=\"location-pin\" size={24} color=\"purple\" />\r\n        <Title title={\"전라남도\"} />\r\n      </Container>\r\n      <Loading />\r\n      <Border/>\r\n    </>\r\n    ) : (\r\n      <Weather temp={Math.round(temp)} condition={condition} humidity={humidity}/>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst Container = styled.View`\r\n  padding: 0 20px;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  margin-top: 20px;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}