{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _jsxFileName = \"C:\\\\Users\\\\Sunwoo\\\\Documents\\\\Gymt\\\\screens\\\\Home\\\\Record.js\";\n\nimport styled from \"styled-components/native\";\nimport Title from \"../../components/Title\";\nimport { FontAwesome, AntDesign } from '@expo/vector-icons';\nimport Border from \"../../components/Home/Border\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RecordItem from \"../../components/Home/RecordItem\";\nimport RecordInput from \"../../components/Home/RecordInput\";\nvar date = new Date();\nvar Today = styled.Text(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n    background-color: rgb(166, 255, 178);\\n    border-radius: 10px;\\n    margin-left: 10px;\\n    padding: 3px 3px;\\n    font-size: 12px;\\n\"])));\nvar Container = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  padding: 0 20px;\\n  flex-direction: row;\\n  align-items: center;\\n  margin-top: 20px;\\n  margin-bottom: 10px;\\n\"])));\nvar PlusIcon = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n    margin: 20px 60px;\\n\"])));\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default function Record() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      courseRecords = _useState2[0],\n      setCourseRecords = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAddMode = _useState4[0],\n      setIsAddMode = _useState4[1];\n\n  var addRecordHandler = function addRecordHandler(recordList) {\n    setCourseRecords(function (currentRecords) {\n      return [].concat(_toConsumableArray(currentRecords), [{\n        id: Math.random().toString(),\n        value: recordList\n      }]);\n    });\n    setIsAddMode(false);\n  };\n\n  var removeRecordHandler = function removeRecordHandler(recordId) {\n    setCourseRecords(function (currentRecords) {\n      return currentRecords.filter(function (record) {\n        return record.id !== recordId;\n      });\n    });\n  };\n\n  var cancelRecordAdditionHandler = function cancelRecordAdditionHandler() {\n    setIsAddMode(false);\n  };\n\n  return React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(FontAwesome, {\n    name: \"heartbeat\",\n    size: 20,\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), React.createElement(Title, {\n    title: \"운동 기록\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), React.createElement(Today, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, date.getMonth() + 1, \"\\uC6D4 \", date.getDate(), \"\\uC77C\")), React.createElement(RecordInput, {\n    visible: isAddMode,\n    onAddRecord: addRecordHandler,\n    onCancel: cancelRecordAdditionHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    data: courseRecords,\n    renderItem: function renderItem(itemData) {\n      return React.createElement(RecordItem, {\n        id: itemData.item.id,\n        onDelete: removeRecordHandler,\n        iconId: itemData.item.value.iconId,\n        startHour: itemData.item.value.enteredStartHour,\n        startMin: itemData.item.value.enteredStartMin,\n        endHour: itemData.item.value.enteredEndHour,\n        endMin: itemData.item.value.enteredEndMin,\n        total: itemData.item.value.enteredTotal,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setIsAddMode(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, React.createElement(PlusIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, React.createElement(AntDesign, {\n    name: \"pluscircle\",\n    size: 36,\n    color: \"rgb(3, 218, 197)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  })))), React.createElement(Border, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 6\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Sunwoo/Documents/Gymt/screens/Home/Record.js"],"names":["styled","Title","FontAwesome","AntDesign","Border","React","useState","RecordItem","RecordInput","date","Date","Today","Text","Container","View","PlusIcon","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","Record","courseRecords","setCourseRecords","isAddMode","setIsAddMode","addRecordHandler","recordList","currentRecords","id","Math","random","toString","value","removeRecordHandler","recordId","filter","record","cancelRecordAdditionHandler","getMonth","getDate","item","itemData","iconId","enteredStartHour","enteredStartMin","enteredEndHour","enteredEndMin","enteredTotal"],"mappings":"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","sourcesContent":["//날씨 정보\r\nimport styled from \"styled-components/native\";\r\nimport Title from \"../../components/Title\";\r\nimport { FontAwesome, AntDesign } from '@expo/vector-icons';\r\nimport Border from \"../../components/Home/Border\"\r\nimport React, { useState } from 'react';\r\nimport { StyleSheet, View, FlatList, TouchableOpacity } from 'react-native';\r\nimport RecordItem from '../../components/Home/RecordItem';\r\nimport RecordInput from '../../components/Home/RecordInput';\r\n\r\nconst date = new Date();\r\n\r\nconst Today = styled.Text`\r\n    background-color: rgb(166, 255, 178);\r\n    border-radius: 10px;\r\n    margin-left: 10px;\r\n    padding: 3px 3px;\r\n    font-size: 12px;\r\n`;\r\n\r\nconst Container = styled.View`\r\n  padding: 0 20px;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst PlusIcon = styled.View`\r\n    margin: 20px 60px;\r\n`;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n});\r\n\r\nexport default function Record() {\r\n  const [courseRecords, setCourseRecords] = useState([]);\r\n  const [isAddMode, setIsAddMode] = useState(false);\r\n\r\n  const addRecordHandler = (recordList) => {\r\n    setCourseRecords((currentRecords) => [\r\n      ...currentRecords,\r\n      { id: Math.random().toString(), value: recordList }\r\n    ]);\r\n    setIsAddMode(false);\r\n  };\r\n\r\n  const removeRecordHandler = (recordId) => {\r\n    setCourseRecords((currentRecords) => {\r\n      return currentRecords.filter((record) => record.id !== recordId);\r\n    });\r\n  };\r\n\r\n  const cancelRecordAdditionHandler = () => {\r\n    setIsAddMode(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <FontAwesome name=\"heartbeat\" size={20} color=\"red\" />\r\n        <Title title={\"운동 기록\"} />\r\n        <Today>{date.getMonth() + 1}월 {date.getDate()}일</Today>\r\n      </Container>\r\n        <RecordInput\r\n          visible={isAddMode}\r\n          onAddRecord={addRecordHandler}\r\n          onCancel={cancelRecordAdditionHandler}\r\n        />\r\n        <FlatList\r\n          keyExtractor={(item) => item.id}\r\n          data={courseRecords}\r\n          renderItem={(itemData) => {\r\n            return (\r\n              <RecordItem\r\n                id={itemData.item.id}\r\n                onDelete={removeRecordHandler}\r\n                iconId={itemData.item.value.iconId}\r\n                startHour={itemData.item.value.enteredStartHour}\r\n                startMin={itemData.item.value.enteredStartMin}\r\n                endHour={itemData.item.value.enteredEndHour}\r\n                endMin={itemData.item.value.enteredEndMin}\r\n                total={itemData.item.value.enteredTotal}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n      <View style={styles.container}>\r\n        <TouchableOpacity onPress={() => setIsAddMode(true)} >\r\n          <PlusIcon>\r\n              <AntDesign name=\"pluscircle\" size={36} color=\"rgb(3, 218, 197)\" />\r\n          </PlusIcon>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n     <Border/>\r\n    </div>\r\n );\r\n}"]},"metadata":{},"sourceType":"module"}